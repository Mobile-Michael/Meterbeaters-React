{"ast":null,"code":"import _classCallCheck from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport DatePickerComponent from \"./Components/DatePickerComponent\";\nimport GeoSuggestTextField from \"./Components/GeoSuggestTextField/GeoSuggestTextField.js\";\nimport MBNavBar from \"./Components/NavBar/MBNavBar\";\nimport axios from \"axios\";\nvar DEFAULT_LAT = 41.8789;\nvar DEFAULT_LNG = -87.6359;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: DEFAULT_LAT,\n      lng: DEFAULT_LNG,\n      startTime: \"11:00\",\n      endTime: \"12:00\",\n      parkingDataRaw: [],\n      leadsDataRaw: []\n    };\n\n    _this.onTimeChanged = function (isEnd, time) {\n      console.log(\"linked time component\", isEnd, time);\n      if (isEnd) _this.setState({\n        endTime: time\n      });else _this.setState({\n        startTime: time\n      });\n    };\n\n    _this.onSuggestCallback = function (suggest) {\n      if (suggest) {\n        var _suggest$location = suggest.location,\n            lat = _suggest$location.lat,\n            lng = _suggest$location.lng;\n        console.log(lat, lng);\n\n        _this.setState({\n          lat: lat,\n          lng: lng\n        });\n      } else {\n        _this.setState({\n          lat: DEFAULT_LAT,\n          lng: DEFAULT_LNG\n        });\n      }\n\n      _this.findParking();\n    };\n\n    _this.generateLeads = function () {\n      var postParams = {\n        Longitude: _this.state.lng,\n        Latitude: _this.state.lat,\n        Distance: 0.00434783\n      };\n      console.log(postParams);\n      axios.post(\"https://www.codemojo.net/MB_Deprecated_test/mycase_leads.php\", postParams).then(function (response) {\n        console.log(\"Leads Data received\");\n        console.log(response.data.length);\n\n        if (response.data.length) {\n          console.log(response.data);\n\n          _this.setState({\n            leadsDataRaw: response.data\n          });\n        } else _this.setState({\n          leadsDataRaw: []\n        });\n      }).catch(function (error) {\n        console.log(\"Error:get generate leads: \", error);\n      });\n    };\n\n    _this.findParking = function () {\n      if (_this.getErrors()) {\n        console.log(\"Errors in inputs not continuing!\");\n        return;\n      }\n\n      console.log(_this.state.lat);\n\n      var postParams = _this.GetParkingURL();\n\n      console.log(postParams);\n      axios //.post(\"http://66.175.210.85/MB_Deprecated_test/newTest.php\", postParams)\n      .post(\"https://www.codemojo.net/MB_Deprecated_test/newTest.php\", postParams).then(function (response) {\n        console.log(\"Data received\");\n        console.log(response.data.length);\n\n        if (response.data.length) {\n          _this.setState({\n            parkingDataRaw: response.data\n          });\n        } else {\n          _this.setState({\n            parkingDataRaw: []\n          });\n        }\n      }).catch(function (error) {\n        console.log(\"Error:get parking: \", error);\n      });\n    };\n\n    _this.GetParkingURL = function () {\n      var postParams = {\n        StartTime: _this.getHHMM_asString(_this.state.startTime),\n        EndTime: _this.getHHMM_asString(_this.state.endTime),\n        Longitude: _this.state.lng,\n        Latitude: _this.state.lat,\n        Distance: 0.00434783,\n        startDay: 7,\n        endDay: 7,\n        numDays: 0,\n        email: \"reacttest@react.com\",\n        YMDstring: \"2018-12-22\",\n        parkType: 0,\n        Type: 1\n      };\n      return postParams;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getErrors\",\n    value: function getErrors() {\n      if (this.state.startTime > this.state.endTime) return \"Start Time Is After End Time!\";else if (!this.state.lat || !this.state.lng) return \"Parking Location Is Not Set!\";else return false;\n    }\n  }, {\n    key: \"getHHMM_asString\",\n    value: function getHHMM_asString(timeString) {\n      return timeString.split(\":\").join(\"\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    //\n    value: function componentDidMount() {\n      console.log(\"mounted called\");\n      this.findParking();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var parkingData = [];\n\n      if (this.state.parkingDataRaw && this.state.parkingDataRaw.length) {\n        parkingData = this.state.parkingDataRaw.map(function (dataForSpot, index) {\n          //const id = dataForSpot[\"ID\"];\n          var latStart = parseFloat(dataForSpot[\"BeginLat\"]);\n          var latEnd = parseFloat(dataForSpot[\"EndLat\"]);\n          var longStart = parseFloat(dataForSpot[\"BeginLong\"]);\n          var longEnd = parseFloat(dataForSpot[\"EndLong\"]);\n          var insert = [{\n            lat: latStart,\n            lng: longStart\n          }, {\n            lat: latEnd,\n            lng: longEnd\n          }];\n          return insert;\n        });\n      }\n\n      var leadsData = [];\n\n      if (this.state.leadsDataRaw && this.state.leadsDataRaw.length) {\n        leadsData = this.state.leadsDataRaw.map(function (dataForSpot, index) {\n          //const id = dataForSpot[\"ID\"];\n          var latInfo = parseFloat(dataForSpot[\"BeginLat\"]);\n          var lngInfo = parseFloat(dataForSpot[\"EndLat\"]);\n          var id = parseFloat(dataForSpot[\"BeginLong\"]);\n          var longEnd = parseFloat(dataForSpot[\"EndLong\"]);\n          var insert = {\n            lat: latInfo,\n            lng: lngInfo,\n            lead_id: id\n          };\n          return insert;\n        });\n      }\n\n      var warning = this.getErrors();\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(MBNavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(DatePickerComponent, {\n        timeChanged: function timeChanged(isEnd, time) {\n          return _this2.onTimeChanged(isEnd, time);\n        },\n        timeStart: this.state.startTime,\n        timeEnd: this.state.endTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-md m-2\",\n        onClick: this.findParking,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Find Parking!\"), React.createElement(\"button\", {\n        className: \"btn btn-success btn-md m-2\",\n        onClick: this.generateLeads,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Generate Law Firm Leads And Park!\"), React.createElement(\"h3\", {\n        className: \"WarnableText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, warning), React.createElement(GeoSuggestTextField, {\n        suggest: function suggest(_suggest) {\n          return _this2.onSuggestCallback(_suggest);\n        },\n        lat: this.state.lat,\n        lng: this.state.lng,\n        parkingInfo: parkingData,\n        leadsInfo: leadsData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), parkingData.length > 0 ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, parkingData.length, \" unique spots available\") : React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"No parking data available\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/src/App.js"],"names":["React","Component","DatePickerComponent","GeoSuggestTextField","MBNavBar","axios","DEFAULT_LAT","DEFAULT_LNG","App","state","lat","lng","startTime","endTime","parkingDataRaw","leadsDataRaw","onTimeChanged","isEnd","time","console","log","setState","onSuggestCallback","suggest","location","findParking","generateLeads","postParams","Longitude","Latitude","Distance","post","then","response","data","length","catch","error","getErrors","GetParkingURL","StartTime","getHHMM_asString","EndTime","startDay","endDay","numDays","email","YMDstring","parkType","Type","timeString","split","join","parkingData","map","dataForSpot","index","latStart","parseFloat","latEnd","longStart","longEnd","insert","leadsData","latInfo","lngInfo","id","lead_id","warning"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport DatePickerComponent from \"./Components/DatePickerComponent\";\nimport GeoSuggestTextField from \"./Components/GeoSuggestTextField/GeoSuggestTextField.js\";\nimport MBNavBar from \"./Components/NavBar/MBNavBar\";\nimport axios from \"axios\";\n\nconst DEFAULT_LAT = 41.8789;\nconst DEFAULT_LNG = -87.6359;\n\nclass App extends Component {\n  state = {\n    lat: DEFAULT_LAT,\n    lng: DEFAULT_LNG,\n    startTime: \"11:00\",\n    endTime: \"12:00\",\n    parkingDataRaw: [],\n    leadsDataRaw: []\n  };\n\n  getErrors() {\n    if (this.state.startTime > this.state.endTime)\n      return \"Start Time Is After End Time!\";\n    else if (!this.state.lat || !this.state.lng)\n      return \"Parking Location Is Not Set!\";\n    else return false;\n  }\n\n  onTimeChanged = (isEnd, time) => {\n    console.log(\"linked time component\", isEnd, time);\n    if (isEnd) this.setState({ endTime: time });\n    else this.setState({ startTime: time });\n  };\n\n  onSuggestCallback = suggest => {\n    if (suggest) {\n      const { lat, lng } = suggest.location;\n      console.log(lat, lng);\n      this.setState({ lat: lat, lng: lng });\n    } else {\n      this.setState({ lat: DEFAULT_LAT, lng: DEFAULT_LNG });\n    }\n\n    this.findParking();\n  };\n\n  generateLeads = () => {\n    const postParams = {\n      Longitude: this.state.lng,\n      Latitude: this.state.lat,\n      Distance: 0.00434783\n    };\n\n    console.log(postParams);\n    axios\n      .post(\n        \"https://www.codemojo.net/MB_Deprecated_test/mycase_leads.php\",\n        postParams\n      )\n      .then(response => {\n        console.log(\"Leads Data received\");\n        console.log(response.data.length);\n        if (response.data.length) {\n          console.log(response.data);\n          this.setState({ leadsDataRaw: response.data });\n        } else this.setState({ leadsDataRaw: [] });\n      })\n      .catch(error => {\n        console.log(\"Error:get generate leads: \", error);\n      });\n  };\n\n  findParking = () => {\n    if (this.getErrors()) {\n      console.log(\"Errors in inputs not continuing!\");\n      return;\n    }\n\n    console.log(this.state.lat);\n    const postParams = this.GetParkingURL();\n    console.log(postParams);\n    axios\n      //.post(\"http://66.175.210.85/MB_Deprecated_test/newTest.php\", postParams)\n      .post(\n        \"https://www.codemojo.net/MB_Deprecated_test/newTest.php\",\n        postParams\n      )\n      .then(response => {\n        console.log(\"Data received\");\n        console.log(response.data.length);\n        if (response.data.length) {\n          this.setState({ parkingDataRaw: response.data });\n        } else {\n          this.setState({ parkingDataRaw: [] });\n        }\n      })\n      .catch(error => {\n        console.log(\"Error:get parking: \", error);\n      });\n  };\n\n  getHHMM_asString(timeString) {\n    return timeString.split(\":\").join(\"\");\n  }\n\n  GetParkingURL = () => {\n    const postParams = {\n      StartTime: this.getHHMM_asString(this.state.startTime),\n      EndTime: this.getHHMM_asString(this.state.endTime),\n      Longitude: this.state.lng,\n      Latitude: this.state.lat,\n      Distance: 0.00434783,\n      startDay: 7,\n      endDay: 7,\n      numDays: 0,\n      email: \"reacttest@react.com\",\n      YMDstring: \"2018-12-22\",\n      parkType: 0,\n      Type: 1\n    };\n\n    return postParams;\n  };\n  //\n  componentDidMount() {\n    console.log(\"mounted called\");\n    this.findParking();\n  }\n\n  render() {\n    let parkingData = [];\n    if (this.state.parkingDataRaw && this.state.parkingDataRaw.length) {\n      parkingData = this.state.parkingDataRaw.map((dataForSpot, index) => {\n        //const id = dataForSpot[\"ID\"];\n        const latStart = parseFloat(dataForSpot[\"BeginLat\"]);\n        const latEnd = parseFloat(dataForSpot[\"EndLat\"]);\n        const longStart = parseFloat(dataForSpot[\"BeginLong\"]);\n        const longEnd = parseFloat(dataForSpot[\"EndLong\"]);\n        const insert = [\n          { lat: latStart, lng: longStart },\n          { lat: latEnd, lng: longEnd }\n        ];\n        return insert;\n      });\n    }\n\n    let leadsData = [];\n    if (this.state.leadsDataRaw && this.state.leadsDataRaw.length) {\n      leadsData = this.state.leadsDataRaw.map((dataForSpot, index) => {\n        //const id = dataForSpot[\"ID\"];\n        const latInfo = parseFloat(dataForSpot[\"BeginLat\"]);\n        const lngInfo = parseFloat(dataForSpot[\"EndLat\"]);\n        const id = parseFloat(dataForSpot[\"BeginLong\"]);\n        const longEnd = parseFloat(dataForSpot[\"EndLong\"]);\n        const insert = { lat: latInfo, lng: lngInfo, lead_id: id };\n        return insert;\n      });\n    }\n\n    let warning = this.getErrors();\n\n    return (\n      <div className=\"App\">\n        <MBNavBar />\n        <DatePickerComponent\n          timeChanged={(isEnd, time) => this.onTimeChanged(isEnd, time)}\n          timeStart={this.state.startTime}\n          timeEnd={this.state.endTime}\n        />\n        <button\n          className=\"btn btn-primary btn-md m-2\"\n          onClick={this.findParking}\n        >\n          Find Parking!\n        </button>\n\n        <button\n          className=\"btn btn-success btn-md m-2\"\n          onClick={this.generateLeads}\n        >\n          Generate Law Firm Leads And Park!\n        </button>\n\n        <h3 className=\"WarnableText\">{warning}</h3>\n\n        <GeoSuggestTextField\n          suggest={suggest => this.onSuggestCallback(suggest)}\n          lat={this.state.lat}\n          lng={this.state.lng}\n          parkingInfo={parkingData}\n          leadsInfo={leadsData}\n        />\n\n        {parkingData.length > 0 ? (\n          <h1>{parkingData.length} unique spots available</h1>\n        ) : (\n          <h1>No parking data available</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}