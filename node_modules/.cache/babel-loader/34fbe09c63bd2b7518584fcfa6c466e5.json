{"ast":null,"code":"import _classCallCheck from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/src/Components/DatePickerComponent.js\";\nimport React, { Component } from \"react\";\nimport TimePicker from \"react-time-picker\";\nimport HourButtonHotKeys from \"./HourButtonHotKeys\";\nimport moment from \"moment\"; //DEVTEST should do this in UTC time but for now hard code it at CST\n\nvar DatePickerComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DatePickerComponent, _Component);\n\n  function DatePickerComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DatePickerComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DatePickerComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onHourHotButtonClicked = function (hoursToAdd, type) {\n      console.log(\"hot button clicked:\", hoursToAdd, type, _this.props.timeEnd, _this.props.timeStart);\n      var isEndTime = type === \"endTime\";\n      var newTimeStr = \"\";\n\n      if (hoursToAdd > 0 && _this.props.timeStart && _this.props.timeEnd) {\n        var hh_mm_components = isEndTime ? _this.getHHMM_fromString(_this.props.timeEnd) : _this.getHHMM_fromString(_this.props.timeStart);\n        hh_mm_components[0] += hoursToAdd;\n        newTimeStr = hh_mm_components[0] >= 24 ? \"23:59\" : hh_mm_components.join(\":\");\n      } else {\n        //aka time  now!\n        newTimeStr = moment(new Date()).format(\"HH:mm\");\n      }\n\n      _this.props.timeChanged(isEndTime, newTimeStr);\n    };\n\n    _this.sanityCheckTimes = function () {\n      console.log(\"In SanityCHeck\", _this.props.timeStart, _this.props.timeEnd);\n      return _this.props.timeStart <= _this.props.timeEnd;\n    };\n\n    _this.onChangeStart = function (time) {\n      _this.props.timeChanged(false, time);\n    };\n\n    _this.onChangeEnd = function (time) {\n      _this.props.timeChanged(true, time);\n    };\n\n    return _this;\n  }\n\n  _createClass(DatePickerComponent, [{\n    key: \"render\",\n    value: function render() {\n      var TextName = this.sanityCheckTimes() ? \"SafeText\" : \"WarnableText\";\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: TextName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Begin Park Time\"), React.createElement(TimePicker, {\n        clearIcon: null,\n        onChange: this.onChangeStart,\n        value: this.props.timeStart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(HourButtonHotKeys, {\n        click: this.onHourHotButtonClicked,\n        name: \"startTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: TextName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"End Park Time\"), React.createElement(TimePicker, {\n        clearIcon: null,\n        onChange: this.onChangeEnd,\n        value: this.props.timeEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(HourButtonHotKeys, {\n        click: this.onHourHotButtonClicked,\n        name: \"endTime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"getHHMM_fromString\",\n    value: function getHHMM_fromString(timeString) {\n      var time_components = timeString.split(\":\");\n      console.log(time_components);\n      return [parseInt(time_components[0]), time_components[1]];\n    }\n  }, {\n    key: \"getHHMM_asString\",\n    value: function getHHMM_asString(timeString) {\n      return timeString.split(\":\").join(\"\");\n    }\n  }]);\n\n  return DatePickerComponent;\n}(Component);\n\nexport default DatePickerComponent;","map":{"version":3,"sources":["/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/src/Components/DatePickerComponent.js"],"names":["React","Component","TimePicker","HourButtonHotKeys","moment","DatePickerComponent","onHourHotButtonClicked","hoursToAdd","type","console","log","props","timeEnd","timeStart","isEndTime","newTimeStr","hh_mm_components","getHHMM_fromString","join","Date","format","timeChanged","sanityCheckTimes","onChangeStart","time","onChangeEnd","TextName","timeString","time_components","split","parseInt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;IAEMC,mB;;;;;;;;;;;;;;;;;;UA+CJC,sB,GAAyB,UAACC,UAAD,EAAaC,IAAb,EAAsB;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CACE,qBADF,EAEEH,UAFF,EAGEC,IAHF,EAIE,MAAKG,KAAL,CAAWC,OAJb,EAKE,MAAKD,KAAL,CAAWE,SALb;AAQA,UAAMC,SAAS,GAAGN,IAAI,KAAK,SAA3B;AAEA,UAAIO,UAAU,GAAG,EAAjB;;AACA,UAAIR,UAAU,GAAG,CAAb,IAAmB,MAAKI,KAAL,CAAWE,SAAX,IAAwB,MAAKF,KAAL,CAAWC,OAA1D,EAAoE;AAClE,YAAII,gBAAgB,GAAGF,SAAS,GAC5B,MAAKG,kBAAL,CAAwB,MAAKN,KAAL,CAAWC,OAAnC,CAD4B,GAE5B,MAAKK,kBAAL,CAAwB,MAAKN,KAAL,CAAWE,SAAnC,CAFJ;AAIAG,QAAAA,gBAAgB,CAAC,CAAD,CAAhB,IAAuBT,UAAvB;AACAQ,QAAAA,UAAU,GACRC,gBAAgB,CAAC,CAAD,CAAhB,IAAuB,EAAvB,GAA4B,OAA5B,GAAsCA,gBAAgB,CAACE,IAAjB,CAAsB,GAAtB,CADxC;AAED,OARD,MAQO;AACL;AACAH,QAAAA,UAAU,GAAGX,MAAM,CAAC,IAAIe,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,OAA1B,CAAb;AACD;;AAED,YAAKT,KAAL,CAAWU,WAAX,CAAuBP,SAAvB,EAAkCC,UAAlC;AACD,K;;UAEDO,gB,GAAmB,YAAM;AACvBb,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,MAAKC,KAAL,CAAWE,SAAzC,EAAoD,MAAKF,KAAL,CAAWC,OAA/D;AACA,aAAO,MAAKD,KAAL,CAAWE,SAAX,IAAwB,MAAKF,KAAL,CAAWC,OAA1C;AACD,K;;UAEDW,a,GAAgB,UAAAC,IAAI,EAAI;AACtB,YAAKb,KAAL,CAAWU,WAAX,CAAuB,KAAvB,EAA8BG,IAA9B;AACD,K;;UAEDC,W,GAAc,UAAAD,IAAI,EAAI;AACpB,YAAKb,KAAL,CAAWU,WAAX,CAAuB,IAAvB,EAA6BG,IAA7B;AACD,K;;;;;;;6BArFQ;AACP,UAAME,QAAQ,GAAG,KAAKJ,gBAAL,KAA0B,UAA1B,GAAuC,cAAxD;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEI,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,QAAQ,EAAE,KAAKH,aAFjB;AAGE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AACE,QAAA,KAAK,EAAE,KAAKP,sBADd;AAEE,QAAA,IAAI,EAAC,WAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEoB,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,QAAQ,EAAE,KAAKD,WAFjB;AAGE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWC,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAfF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AACE,QAAA,KAAK,EAAE,KAAKN,sBADd;AAEE,QAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAvBF,CADF;AAgCD;;;uCAEkBqB,U,EAAY;AAC7B,UAAMC,eAAe,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAxB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,eAAZ;AACA,aAAO,CAACE,QAAQ,CAACF,eAAe,CAAC,CAAD,CAAhB,CAAT,EAA+BA,eAAe,CAAC,CAAD,CAA9C,CAAP;AACD;;;qCAEgBD,U,EAAY;AAC3B,aAAOA,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsBX,IAAtB,CAA2B,EAA3B,CAAP;AACD;;;;EA7C+BjB,S;;AAyFlC,eAAeI,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TimePicker from \"react-time-picker\";\nimport HourButtonHotKeys from \"./HourButtonHotKeys\";\nimport moment from \"moment\";\n\n//DEVTEST should do this in UTC time but for now hard code it at CST\n\nclass DatePickerComponent extends Component {\n  render() {\n    const TextName = this.sanityCheckTimes() ? \"SafeText\" : \"WarnableText\";\n    return (\n      <span>\n        <div>\n          <h3 className={TextName}>Begin Park Time</h3>\n          <TimePicker\n            clearIcon={null}\n            onChange={this.onChangeStart}\n            value={this.props.timeStart}\n          />\n        </div>\n        <div>\n          <HourButtonHotKeys\n            click={this.onHourHotButtonClicked}\n            name=\"startTime\"\n          />\n        </div>\n        <div>\n          <h3 className={TextName}>End Park Time</h3>\n          <TimePicker\n            clearIcon={null}\n            onChange={this.onChangeEnd}\n            value={this.props.timeEnd}\n          />\n        </div>\n        <div>\n          <HourButtonHotKeys\n            click={this.onHourHotButtonClicked}\n            name=\"endTime\"\n          />\n        </div>\n      </span>\n    );\n  }\n\n  getHHMM_fromString(timeString) {\n    const time_components = timeString.split(\":\");\n    console.log(time_components);\n    return [parseInt(time_components[0]), time_components[1]];\n  }\n\n  getHHMM_asString(timeString) {\n    return timeString.split(\":\").join(\"\");\n  }\n\n  onHourHotButtonClicked = (hoursToAdd, type) => {\n    console.log(\n      \"hot button clicked:\",\n      hoursToAdd,\n      type,\n      this.props.timeEnd,\n      this.props.timeStart\n    );\n\n    const isEndTime = type === \"endTime\";\n\n    let newTimeStr = \"\";\n    if (hoursToAdd > 0 && (this.props.timeStart && this.props.timeEnd)) {\n      let hh_mm_components = isEndTime\n        ? this.getHHMM_fromString(this.props.timeEnd)\n        : this.getHHMM_fromString(this.props.timeStart);\n\n      hh_mm_components[0] += hoursToAdd;\n      newTimeStr =\n        hh_mm_components[0] >= 24 ? \"23:59\" : hh_mm_components.join(\":\");\n    } else {\n      //aka time  now!\n      newTimeStr = moment(new Date()).format(\"HH:mm\");\n    }\n\n    this.props.timeChanged(isEndTime, newTimeStr);\n  };\n\n  sanityCheckTimes = () => {\n    console.log(\"In SanityCHeck\", this.props.timeStart, this.props.timeEnd);\n    return this.props.timeStart <= this.props.timeEnd;\n  };\n\n  onChangeStart = time => {\n    this.props.timeChanged(false, time);\n  };\n\n  onChangeEnd = time => {\n    this.props.timeChanged(true, time);\n  };\n}\n\nexport default DatePickerComponent;\n"]},"metadata":{},"sourceType":"module"}