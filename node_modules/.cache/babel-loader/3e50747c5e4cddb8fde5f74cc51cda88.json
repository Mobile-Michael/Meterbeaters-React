{"ast":null,"code":"var _jsxFileName = \"/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/src/Components/GoogleMap/MBGoogleMap.js\";\nimport * as React from \"react\";\nimport { GoogleMap, Marker, withGoogleMap } from \"react-google-maps\";\nimport Polyline from \"react-google-maps/lib/components/Polyline\";\nimport logo from \"./MBLogo.png\";\n/*global google*/\n\nvar MBGoogleMap = withGoogleMap(function (props) {\n  var markers = null;\n  console.log(\"leadInfo: \", props.selectedLead);\n\n  if (props.selectedLead) {\n    console.log(props.selectedLead.lead_id);\n  }\n\n  markers = props.leadsGeoMarkers.map(function (geoMarkInfo, index) {\n    if (props.selectedLead && props.selectedLead.lead_id === geoMarkInfo.lead_info) {\n      return React.createElement(Marker, {\n        key: geoMarkInfo.lead_id,\n        onClick: function onClick() {\n          props.onLeadClick(geoMarkInfo);\n        },\n        icon: {\n          url: logo,\n          scaledSize: new google.maps.Size(26, 26)\n        },\n        position: {\n          lat: geoMarkInfo.lat,\n          lng: geoMarkInfo.lng\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Marker, {\n        key: geoMarkInfo.lead_id,\n        onClick: function onClick() {\n          props.onLeadClick(geoMarkInfo);\n        } //icon={{ url: logo, scaledSize: new google.maps.Size(32, 32) }}\n        ,\n        position: {\n          lat: geoMarkInfo.lat,\n          lng: geoMarkInfo.lng\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  });\n  console.log(\"markers: \", markers);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 8,\n    zoom: props.zoom,\n    defaultCenter: {\n      lat: props.lat,\n      lng: props.lng\n    },\n    center: {\n      lat: props.lat,\n      lng: props.lng\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.polylines.map(function (polyline, index) {\n    return React.createElement(Polyline, {\n      key: index,\n      path: polyline //geodesic={true}\n      ,\n      options: {\n        strokeColor: \"#008b45\",\n        strokeOpacity: 0.75,\n        strokeWeight: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }), markers);\n});\nexport default MBGoogleMap;","map":{"version":3,"sources":["/Users/mikemullin/Desktop/React/MeterBeaters/meterbeaters/src/Components/GoogleMap/MBGoogleMap.js"],"names":["React","GoogleMap","Marker","withGoogleMap","Polyline","logo","MBGoogleMap","props","markers","console","log","selectedLead","lead_id","leadsGeoMarkers","map","geoMarkInfo","index","lead_info","onLeadClick","url","scaledSize","google","maps","Size","lat","lng","zoom","polylines","polyline","strokeColor","strokeOpacity","strokeWeight"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { GoogleMap, Marker, withGoogleMap } from \"react-google-maps\";\n\nimport Polyline from \"react-google-maps/lib/components/Polyline\";\n\nimport logo from \"./MBLogo.png\";\n\n/*global google*/\n\nconst MBGoogleMap = withGoogleMap(props => {\n  let markers = null;\n  console.log(\"leadInfo: \", props.selectedLead);\n  if (props.selectedLead) {\n    console.log(props.selectedLead.lead_id);\n  }\n  markers = props.leadsGeoMarkers.map((geoMarkInfo, index) => {\n    if (\n      props.selectedLead &&\n      props.selectedLead.lead_id === geoMarkInfo.lead_info\n    ) {\n      return (\n        <Marker\n          key={geoMarkInfo.lead_id}\n          onClick={() => {\n            props.onLeadClick(geoMarkInfo);\n          }}\n          icon={{ url: logo, scaledSize: new google.maps.Size(26, 26) }}\n          position={{ lat: geoMarkInfo.lat, lng: geoMarkInfo.lng }}\n        />\n      );\n    } else {\n      return (\n        <Marker\n          key={geoMarkInfo.lead_id}\n          onClick={() => {\n            props.onLeadClick(geoMarkInfo);\n          }}\n          //icon={{ url: logo, scaledSize: new google.maps.Size(32, 32) }}\n          position={{ lat: geoMarkInfo.lat, lng: geoMarkInfo.lng }}\n        />\n      );\n    }\n  });\n\n  console.log(\"markers: \", markers);\n\n  return (\n    <GoogleMap\n      defaultZoom={8}\n      zoom={props.zoom}\n      defaultCenter={{ lat: props.lat, lng: props.lng }}\n      center={{ lat: props.lat, lng: props.lng }}\n    >\n      {props.polylines.map((polyline, index) => (\n        <Polyline\n          key={index}\n          path={polyline}\n          //geodesic={true}\n          options={{\n            strokeColor: \"#008b45\",\n            strokeOpacity: 0.75,\n            strokeWeight: 3\n          }}\n        />\n      ))}\n\n      {markers}\n    </GoogleMap>\n  );\n});\n\nexport default MBGoogleMap;\n"]},"metadata":{},"sourceType":"module"}